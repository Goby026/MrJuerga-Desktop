package Vista;

import Controlador.ManejadorFechas;
import Modelo.Conexion;
import Modelo.Movimiento;
import Modelo.MovimientoProducto;
import Modelo.MySQLDAO.MovimientoDAO;
import Modelo.MySQLDAO.MovimientoProductoDAO;
import Modelo.MySQLDAO.PresentacionDAO;
import Modelo.MySQLDAO.ProductoDAO;
import Modelo.MySQLDAO.ProductoPresentacionDAO;
import Modelo.MySQLDAO.UsuarioDAO;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MARCEL
 */
public class KardexSalidas extends javax.swing.JInternalFrame {

    DefaultTableModel modelProductoSalida;
    DefaultTableModel modelAddSalida;

    public KardexSalidas(String usuario) {
        initComponents();
        txtFechaSalida.setText(new ManejadorFechas().getFechaActual());
        txtUsuario.setText(usuario);
        titulosProductosSalida();
        titulosAddSalida();
    }

    public void titulosProductosSalida() {
        String[] titulos = {"#ID", "PRODUCTO", "PRESENTACION", "STOCK ACTUAL", "PRECIO"};
        modelProductoSalida = new DefaultTableModel(null, titulos);
        tblProductos.setModel(modelProductoSalida);
    }

    public void titulosAddSalida() {
        String[] titulos = {"#ID", "PRODUCTO", "PRESENTACION", "CANTIDAD", "CONCEPTO", "SUBTOTAL"};
        modelAddSalida = new DefaultTableModel(null, titulos);
        tblSalidas.setModel(modelAddSalida);
    }

    public void limpiarTablaProductoSalidas() {
        for (int i = 0; i < tblProductos.getRowCount(); i++) {
            modelProductoSalida.removeRow(i);
            i -= 1;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salidas = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtProductoSalida = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btnAddSalida = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblSalidas = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        txtCantidadSalida = new javax.swing.JTextField();
        btnRegistrarSalida = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaObservacion = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtFechaSalida = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salidas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(204, 51, 0));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("PRODUCTO");
        jPanel12.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        salidas.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 90, 30));

        txtProductoSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProductoSalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductoSalidaKeyReleased(evt);
            }
        });
        salidas.add(txtProductoSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 350, 30));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblProductos);

        salidas.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 930, 200));

        btnAddSalida.setText("SELECCIONAR");
        btnAddSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSalidaActionPerformed(evt);
            }
        });
        salidas.add(btnAddSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 400, 170, -1));

        tblSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblSalidas);

        salidas.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 930, 150));

        jPanel17.setBackground(new java.awt.Color(204, 51, 0));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("CONCEPTO");
        jPanel17.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, -1));

        salidas.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 400, 20));

        jPanel18.setBackground(new java.awt.Color(204, 51, 0));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("UNIDADES");
        jPanel18.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        salidas.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 150, 20));

        txtCantidadSalida.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtCantidadSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        salidas.add(txtCantidadSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 150, 60));

        btnRegistrarSalida.setText("REGISTRAR SALIDA");
        btnRegistrarSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarSalidaActionPerformed(evt);
            }
        });
        salidas.add(btnRegistrarSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 610, 170, -1));

        txaObservacion.setColumns(20);
        txaObservacion.setLineWrap(true);
        txaObservacion.setRows(5);
        jScrollPane1.setViewportView(txaObservacion);

        salidas.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 400, -1));

        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        salidas.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 610, -1, -1));

        jLabel2.setText("CATEGORIA");
        salidas.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

        salidas.add(cmbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 230, -1));

        getContentPane().add(salidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 39, 995, 680));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("MOVIMIENTOS : SALIDAS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel13.setBackground(new java.awt.Color(204, 51, 0));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("FECHA");
        jPanel13.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, 60, 20));

        txtFechaSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txtFechaSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 100, -1));

        jPanel14.setBackground(new java.awt.Color(204, 51, 0));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("USUARIO");
        jPanel14.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        getContentPane().add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, 70, 20));

        txtUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductoSalidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductoSalidaKeyReleased
        try {
            buscarProductoSalida();
        } catch (Exception ex) {
            Logger.getLogger(KardexSalidas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtProductoSalidaKeyReleased

    private void btnAddSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSalidaActionPerformed
        int fila = tblProductos.getSelectedRow();
        if (fila >= 0) {
            if (!txtCantidadSalida.getText().trim().isEmpty()) {
                if (!txaObservacion.getText().trim().isEmpty()) {

                    String id = tblProductos.getValueAt(fila, 0).toString();
                    String prod = tblProductos.getValueAt(fila, 1).toString();
                    String presentacion = tblProductos.getValueAt(fila, 2).toString();
                    Double cant = Double.parseDouble(txtCantidadSalida.getText());
                    String concepto = txaObservacion.getText();
                    double subtotal = cant * (Double.parseDouble(tblProductos.getValueAt(fila, 4).toString()));

                    if (Integer.parseInt(tblProductos.getValueAt(fila, 3).toString()) >= cant) {
                        String datos[] = new String[6];
                        datos[0] = id;
                        datos[1] = prod;
                        datos[2] = presentacion;
                        datos[3] = String.valueOf(cant);
                        datos[4] = concepto;
                        datos[5] = String.valueOf(subtotal);

                        modelAddSalida.addRow(datos);
                        tblSalidas.setModel(modelAddSalida);
                    } else {
                        JOptionPane.showMessageDialog(getRootPane(), "NO SE CUENTA CON LAS UNIDADES REQUERIDAS");
                    }
                } else {
                    JOptionPane.showMessageDialog(getRootPane(), "INGRESE UN CONCEPTO DE SALIDA");
                }
            } else {
                JOptionPane.showMessageDialog(getRootPane(), "INGRESE UNA CANTIDAD");
            }
        } else {
            JOptionPane.showMessageDialog(getRootPane(), "SELECCIONE UN PRODUCTO");
        }
    }//GEN-LAST:event_btnAddSalidaActionPerformed

    private void btnRegistrarSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarSalidaActionPerformed
        try {
            int numFilas = tblSalidas.getRowCount();
            Movimiento m = new Movimiento();
            m.setFecha(new ManejadorFechas().getFechaActualMySQL());
            m.setHora(new ManejadorFechas().getHoraActual());
            m.setIdtipoMovimiento(2);// tipo de movimiento 1 = entradas ; tipo mov 2 = salidas;
            m.setIdUsuario(new UsuarioDAO().getIdUsuario(txtUsuario.getText()));
            m.setObservacion(txaObservacion.getText());
            
            if (new MovimientoDAO().Registrar(m)) {
                int ultimoMovimiento = new MovimientoDAO().getUltimoMovimiento();
                System.out.println("MOVIMIENTO REGISTRADO");
                //ACTUALIZANDO EL STOCK
                int c = 0;
                for (int i = 0; i < numFilas; i++) {
                    MovimientoProducto mp = new MovimientoProducto();
                    mp.setIdMovimiento(ultimoMovimiento);
                    System.out.println("ultimo movimiento: " + ultimoMovimiento);
                    mp.setIdProducto(new ProductoDAO().getIdProducto(Integer.parseInt(tblSalidas.getValueAt(i, 0).toString())));
                    System.out.println("idproducto: " + mp.getIdProducto());
                    mp.setIdPresentacion(new PresentacionDAO().getIdPresentacion(tblSalidas.getValueAt(i, 2).toString()));
                    System.out.println("idpresentacion: " + mp.getIdPresentacion());
                    mp.setCantidad(Double.parseDouble(tblSalidas.getValueAt(i, 3).toString()));
                    System.out.println("cantidad: " + mp.getCantidad());
                    mp.setValorizacion(Double.parseDouble(tblSalidas.getValueAt(i, 5).toString()));
                    System.out.println("valorizacion: " + mp.getValorizacion());

                    restarStock();
                    if (new MovimientoProductoDAO().Registrar(mp)) {
                        c++;
                    }
                }
                if (c > 0) {
                    JOptionPane.showMessageDialog(getRootPane(), "MOVIMIENTO REGISTRADO");
                }
            } else {
                System.out.println("error");
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnRegistrarSalidaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int fila = tblSalidas.getSelectedRow();
        modelAddSalida.removeRow(fila);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSalida;
    private javax.swing.JButton btnRegistrarSalida;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel salidas;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblSalidas;
    private javax.swing.JTextArea txaObservacion;
    private javax.swing.JTextField txtCantidadSalida;
    private javax.swing.JTextField txtFechaSalida;
    private javax.swing.JTextField txtProductoSalida;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    public void buscarProductoSalida() throws Exception {
        Conexion c = new Conexion();
        c.conectar();
        Connection con = c.getConexion();
        limpiarTablaProductoSalidas();
        String art = txtProductoSalida.getText();
        String datos[] = new String[5];
        String sql = "SELECT productopresentacion.idproductopresentacion, producto.nombre, presentacion.descripcion, productopresentacion.stock, productopresentacion.precio\n"
                + "FROM producto\n"
                + "inner join productopresentacion on producto.idproducto = productopresentacion.idproducto\n"
                + "inner join presentacion on productopresentacion.idpresentacion = presentacion.idpresentacion\n"
                + "where producto.nombre like '" + art + "%' or producto.nombre like '%" + art + "'\n"
                + "order by idproductopresentacion";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = String.valueOf(rs.getInt("productopresentacion.idproductopresentacion"));
                datos[1] = rs.getString("producto.nombre");
                datos[2] = rs.getString("presentacion.descripcion");
                datos[3] = rs.getString("productopresentacion.stock");
                datos[4] = rs.getString("productopresentacion.precio");
                modelProductoSalida.addRow(datos);
            }
            tblProductos.setModel(modelProductoSalida);
            //tbl_productos.setModel(new DefaultTableModel());
            st.close();
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(getRootPane(), e.getMessage());
        } finally {
            c.cerrar();
        }
    }

    private void restarStock() throws Exception {
        Conexion c = new Conexion();
        c.conectar();
        Connection con = c.getConexion();
        int numFilas = tblSalidas.getRowCount();
        try {
            Statement st = null;
            for (int i = 0; i < numFilas; i++) {
                int id = Integer.parseInt(tblSalidas.getValueAt(i, 0).toString());
                System.out.println("id: " + id);
                double cantidad = Double.parseDouble(tblSalidas.getValueAt(i, 3).toString());
                System.out.println("cantidad: " + cantidad);
                double stock = new ProductoPresentacionDAO().obtenerProductoPresentacion(id).getStock();
                System.out.println("stock: " + stock);
                double newStock = stock - cantidad;
                System.out.println("stock: " + newStock);

                String sql = "UPDATE `productopresentacion` SET `stock`=" + newStock + " WHERE `idproductopresentacion` = " + id + " ";
                st = con.createStatement();
                int rs = st.executeUpdate(sql);
                if (rs > 0) {
                    System.out.println("Se actualizo en stock del producto :" + id);
                }
            }
            st.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            c.cerrar();
        }
    }

}
