package Vista;

import Controlador.ColumnasTablas;
import Controlador.Cronometro;
import Controlador.ManejadorFechas;
import Controlador.StockBebidasPreparadas;
import Modelo.Almacen;
import Modelo.Conexion;
import Modelo.ProductoPresentacion;
import Modelo.MySQLDAO.AlmacenDAO;
import Modelo.MySQLDAO.PreparacionDAO;
import Modelo.MySQLDAO.ProductoPresentacionDAO;
import Modelo.MySQLDAO.TrasladoDAO;
import Modelo.MySQLDAO.TrasladoProdPresDAO;
import Modelo.MySQLDAO.UsuarioDAO;
import Modelo.Preparacion;
import Modelo.Traslado;
import Modelo.TrasladoProdPres;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Grover
 */
public class MovimientosBarras extends javax.swing.JInternalFrame {

    DefaultTableModel modeloBuscarProductos;
    DefaultTableModel modeloMovimientos;

    public MovimientosBarras(String usuario) throws Exception {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
//        new LlenarTablaProductos(tblProductos, 50, 100, 200);
//        new cargarComboAlmacenes(cmbAlmacenes);
        new Cronometro().iniciarCronometro(txtHora);
        txtFecha.setText(new ManejadorFechas().getFechaActual());
        txtUsuario.setText(usuario);

        titulosBuscarProductos();
        titulosMovimientos();
        cargarComboAlmacen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuscarProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnTrasladar = new javax.swing.JButton();
        cmbDestino = new javax.swing.JComboBox<>();
        cmbOrigen = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMovimientos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("MOVIMIENTOS DE PRODUCTOS CON FACTURA");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBuscarProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBuscarProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBuscarProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuscarProductos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 510, 230));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("DESTINO");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("CANTIDAD");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("ORIGEN");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        txtBuscarProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProductoKeyReleased(evt);
            }
        });
        getContentPane().add(txtBuscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 300, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("PRODUCTO");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        txtCantidad.setEnabled(false);
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 120, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_Add_24px.png"))); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, 160, 30));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("MOVIMIENTOS INTERNOS");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(" X");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 112, 20, 20));

        btnTrasladar.setText("TRASLADAR");
        btnTrasladar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrasladarActionPerformed(evt);
            }
        });
        getContentPane().add(btnTrasladar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 623, 250, 30));

        cmbDestino.setEnabled(false);
        getContentPane().add(cmbDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 200, -1));

        cmbOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrigenActionPerformed(evt);
            }
        });
        getContentPane().add(cmbOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 300, -1));

        jPanel8.setBackground(new java.awt.Color(0, 102, 255));
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Bauhaus 93", 0, 36)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("MOVIMIENTOS");
        jPanel8.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 30));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/movimientosalmacen.png"))); // NOI18N
        jPanel8.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 70));

        txtFecha.setEditable(false);
        txtFecha.setBackground(new java.awt.Color(0, 102, 255));
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "FECHA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 8), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 90, -1));

        txtHora.setBackground(new java.awt.Color(0, 102, 255));
        txtHora.setForeground(new java.awt.Color(255, 255, 255));
        txtHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHora.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "HORA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 8), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 90, -1));

        txtUsuario.setBackground(new java.awt.Color(0, 102, 255));
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "USUARIO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 8), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 140, -1));

        jLabel24.setFont(new java.awt.Font("Bauhaus 93", 0, 36)); // NOI18N
        jLabel24.setText("MOVIMIENTOS");
        jPanel8.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 20, -1, 30));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 70));

        jPanel6.setBackground(new java.awt.Color(0, 102, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 51, 0));
        jLabel26.setText("DISCOTECK");
        jPanel6.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, -1, -1));

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel13.setText("DISCOTECK");
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 0, -1, -1));

        jLabel27.setBackground(new java.awt.Color(0, 0, 0));
        jLabel27.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("MISTER JUERGA");
        jPanel6.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, -1));

        jLabel28.setBackground(new java.awt.Color(0, 0, 0));
        jLabel28.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel28.setText("MISTER JUERGA");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 0, -1, -1));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 830, 40));

        tblMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblMovimientos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 830, 200));

        jButton1.setText("LISTA DE TRASLADOS");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 200, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        txtBuscarProducto.setText("");
        txtBuscarProducto.requestFocus();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void btnTrasladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrasladarActionPerformed
        try {
            Traslado t = new Traslado();
            t.setFecha(new ManejadorFechas().getFechaActualMySQL());
            t.setHora(new ManejadorFechas().getHoraActual());
            t.setIdUsuario(new UsuarioDAO().getIdUsuario(txtUsuario.getText()));
            t.setIdTipoTraslado(1);//1= traslado de productos con factura, 2= traslado de productos sin factura
            TrasladoDAO tdao = new TrasladoDAO();

            int c = 0;

            if (tdao.Registrar(t)) {
                System.out.println("se registro el traslado");
                TrasladoProdPres tpp = new TrasladoProdPres();
                int lastId = new TrasladoDAO().ultimoTraslado();
                TrasladoProdPresDAO tppdao = new TrasladoProdPresDAO();
                for (int i = 0; i < tblMovimientos.getRowCount(); i++) {
                    tpp.setIdTraslado(lastId);
                    tpp.setIdProductoPresentacion(Integer.parseInt(tblMovimientos.getValueAt(i, 0).toString()));
                    tpp.setCantidad(Integer.parseInt(tblMovimientos.getValueAt(i, 5).toString()));
                    tpp.setOrigen(tblMovimientos.getValueAt(i, 3).toString());
                    tpp.setDestino(tblMovimientos.getValueAt(i, 4).toString());

                    if (tppdao.Registrar(tpp)) {
                        c++;
                        System.out.println("detalles registrados");
                    }
                }
            }

            if (c > 0) {
                restarStock();
                sumarStock();
                JOptionPane.showMessageDialog(getRootPane(), "SE REGISTRO EL TRASLADO");
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btnTrasladarActionPerformed

    private void txtBuscarProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductoKeyReleased
        try {
            Almacen a = (Almacen) cmbOrigen.getSelectedItem();
            LlenarTablaBuscarProductos(txtBuscarProducto.getText(), a.getId());
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_txtBuscarProductoKeyReleased

    private void cmbOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrigenActionPerformed
        if (!txtBuscarProducto.getText().trim().isEmpty()) {
            Almacen a = (Almacen) cmbOrigen.getSelectedItem();
            String prod = txtBuscarProducto.getText();
            try {
                LlenarTablaBuscarProductos(prod, a.getId());
            } catch (Exception ex) {
                Logger.getLogger(MovimientosBarras.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmbOrigenActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int fila = tblBuscarProductos.getSelectedRow();
        if (fila >= 0) {
            Almacen origen = (Almacen) cmbOrigen.getSelectedItem();
            Almacen destino = (Almacen) cmbDestino.getSelectedItem();
            if (origen.getId() != destino.getId()) {
                //if (origen.getId() != 1) {
                int stock = Integer.parseInt(tblBuscarProductos.getValueAt(fila, 3).toString());
                if (stock != 0) {
                    int cantidad = Integer.parseInt(txtCantidad.getText());
                    if (stock >= cantidad) {
                        String datos[] = new String[6];
                        datos[0] = tblBuscarProductos.getValueAt(fila, 0).toString();
                        datos[1] = tblBuscarProductos.getValueAt(fila, 1).toString();
                        datos[2] = tblBuscarProductos.getValueAt(fila, 2).toString();
                        datos[3] = origen.getNombre();
                        datos[4] = destino.getNombre();
                        datos[5] = txtCantidad.getText();

                        modeloMovimientos.addRow(datos);

                        tblMovimientos.setModel(modeloMovimientos);

                        limpiarCampos();
                    } else {
                        JOptionPane.showMessageDialog(getRootPane(), "NO SE CUENTA CON LAS UNIDADES SOLICITADAS");
                    }
                } else {
                    JOptionPane.showMessageDialog(getRootPane(), "EL INVENTARIO NO TIENE STOCK PARA LA OPERACION");
                }

//                } else {
//                    JOptionPane.showMessageDialog(getRootPane(), "SOLO SE PERMITE MOVIMIENTOS ENTRE BARRAS Y DEVOLUCIONES A ALMACEN PRINCIPAL");
//                }
            } else {
                JOptionPane.showMessageDialog(getRootPane(), "NO PUEDE REALIZAR MOVIMIENTOS DEL MISMO ALMACEN");
            }
        } else {
            JOptionPane.showMessageDialog(getRootPane(), "SELECCIONE UN PRODUCTO");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblBuscarProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBuscarProductosMouseClicked
        int fila = tblBuscarProductos.getSelectedRow();
        if (fila >= 0) {
            cmbDestino.setEnabled(true);
            txtCantidad.setEnabled(true);
            btnAgregar.setEnabled(true);
        } else {
            cmbDestino.setEnabled(false);
            txtCantidad.setEnabled(false);
            btnAgregar.setEnabled(false);
        }
    }//GEN-LAST:event_tblBuscarProductosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnTrasladar;
    private javax.swing.JComboBox<Almacen> cmbDestino;
    private javax.swing.JComboBox<Almacen> cmbOrigen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblBuscarProductos;
    private javax.swing.JTable tblMovimientos;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void titulosBuscarProductos() {
        String titulos[] = {"ID", "PRODUCTO", "PRESENTACION", "STOCK"};
        modeloBuscarProductos = new DefaultTableModel(null, titulos);
        tblBuscarProductos.setModel(modeloBuscarProductos);
    }

    private void titulosMovimientos() {
        String titulos[] = {"COD", "PRODUCTO", "PRESENTACION", "ORIGEN", "DESTINO", "CANTIDAD"};
        modeloMovimientos = new DefaultTableModel(null, titulos);
        tblMovimientos.setModel(modeloMovimientos);
    }

    private void cargarComboAlmacen() throws Exception {
        AlmacenDAO adao = new AlmacenDAO();
        for (Almacen a : adao.listar()) {
            cmbOrigen.addItem(a);
            cmbDestino.addItem(a);
        }
    }

    private void LlenarTablaBuscarProductos(String nomProd, int idAlmacen) throws Exception {
        Conexion con = new Conexion();
        titulosBuscarProductos();

        try {
            con.conectar();
            String sql = "SELECT productopresentacion.idproductopresentacion, producto.nombre, presentacion.descripcion, productopresentacion.stock\n"
                    + "FROM productopresentacion\n"
                    + "INNER JOIN producto on productopresentacion.idproducto = producto.idproducto\n"
                    + "INNER JOIN presentacion on productopresentacion.idpresentacion = presentacion.idpresentacion\n"
                    + "WHERE producto.nombre LIKE '%" + nomProd + "%' AND productopresentacion.idalmacen = " + idAlmacen + " AND productopresentacion.idcategoria > 2 \n"
                    + "ORDER BY productopresentacion.idproducto";

            PreparedStatement pst = con.getConexion().prepareStatement(sql);

            ResultSet res = pst.executeQuery();

            Object[] datos = new Object[4];

            while (res.next()) {
                datos[0] = res.getInt(1);
                datos[1] = res.getString(2);
                datos[2] = res.getString(3);
                datos[3] = res.getString(4);
                modeloBuscarProductos.addRow(datos);
            }

            tblBuscarProductos.setModel(modeloBuscarProductos);
            new ColumnasTablas().cuatroColumnas(tblBuscarProductos, 50, 400, 100, 50);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            con.cerrar();
        }
    }

    private void restarStock() throws Exception {
        Conexion c = new Conexion();
        c.conectar();
        Connection con = c.getConexion();
        int numFilas = tblMovimientos.getRowCount();
        try {
            Statement st = null;
            for (int i = 0; i < numFilas; i++) {
                int id = Integer.parseInt(tblMovimientos.getValueAt(i, 0).toString());
                System.out.println("id: " + id);
                double cantidad = Double.parseDouble(tblMovimientos.getValueAt(i, 5).toString());
                System.out.println("cantidad: " + cantidad);
                Double stock = new ProductoPresentacionDAO().Obtener(id).getStock();
                System.out.println("stock: " + stock);
                double newStock = stock - cantidad;
                System.out.println("stock: " + newStock);
                String sql = "UPDATE `productopresentacion` SET `stock`=" + newStock + " WHERE idproductopresentacion = " + id;
                st = con.createStatement();
                int rs = st.executeUpdate(sql);
                if (rs > 0) {
                    System.out.println("Se actualizo en stock del producto :" + id);
                }
            }
            st.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            con.close();
            c.cerrar();
        }
    }

    private void sumarStock() throws Exception {
        Conexion c = new Conexion();
        c.conectar();
        Connection con = c.getConexion();
        int numFilas = tblMovimientos.getRowCount();
        try {
            Statement st = null;
            for (int i = 0; i < numFilas; i++) {
                Almacen a = new AlmacenDAO().Obtener(tblMovimientos.getValueAt(i, 4).toString());
                ProductoPresentacion pp = new ProductoPresentacionDAO().Obtener(tblMovimientos.getValueAt(i, 1).toString(), a.getId());
                System.out.println("id: " + pp.getIdProductoPresentacion());
                double cantidad = Double.parseDouble(tblMovimientos.getValueAt(i, 5).toString());
                System.out.println("cantidad: " + cantidad);
                double stock = pp.getStock();
                System.out.println("stock: " + stock);
                double newStock = stock + cantidad;
                System.out.println("stock: " + newStock);
                String sql = "UPDATE productopresentacion SET stock = " + newStock + " WHERE idproductopresentacion = " + pp.getIdProductoPresentacion();

                st = con.createStatement();
                int rs = st.executeUpdate(sql);
                if (rs > 0) {
                    if (a.getId() != 1) {
                        actualizarStockProductoPadre(a.getId());
                    }
                    System.out.println("Se actualizo en stock del producto :" + pp.getIdProductoPresentacion());
                }
            }
            st.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            con.close();
            c.cerrar();
        }
    }

    private void actualizarStockProductoPadre(int idAlmacen) {
        try {
            //actualizar stock si se compraron productos que sirven de componentes
            //evaluar si es producto componente

            PreparacionDAO pdao = new PreparacionDAO();

            for (Preparacion p : pdao.Listar()) {

                StockBebidasPreparadas sbp = new StockBebidasPreparadas(p.getIdProducto(), idAlmacen);
                sbp.updateStock(idAlmacen);

            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void limpiarCampos() {
        tblBuscarProductos.clearSelection();
        txtCantidad.setText("");
        cmbDestino.setEnabled(false);
        txtCantidad.setEnabled(false);
        btnAgregar.setEnabled(false);
    }

}
